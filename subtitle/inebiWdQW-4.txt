今天的故事呢,要從最近這幾話的葬送的芙莉蓮開始講起啦
我不知道你這幾週有沒有看葬送的芙莉蓮啦
所以我還是跟你描述一下這幾週的劇情
這幾週呢,是芙莉蓮跟其他的魔法使
包括他的徒弟費倫,在考一級魔法使的資格
那其中一個關卡呢,就是要攻略一個迷宮叫做靈洛的王座
那這個迷宮呢 裡面有一個惡魔 叫做水鏡的惡魔
阿其實在三國演義裡面也有出現啦 那就是司馬徽
那個水鏡的惡魔他的能力呢 就是可以複製進入迷宮的人的能力
所以芙莉蓮進入了迷宮 所以他就可以複製出一個伏利連的複製體
來防衛他自己
所以大家的任務呢 就是需要去打敗伏利連的複製體
但你知道伏利連是一個千年的魔法使
所以當他使用全力的時候 是沒有人可以打敗芙莉蓮的
這個就是芙莉蓮的複製體 而複製體是沒有顏色的
所以你可以跟本體做出區別
雖然沒有人可以打敗芙莉蓮 就算是他自己也不一定能夠打贏自己的複製體
但是芙莉蓮相信他自己跟費倫一起上
費倫是芙莉蓮的弟子 是一個人類 只有學過幾年的魔法
但他相信他跟費倫一起上 就可以打敗複製體
所以弗利連就跟費倫一起去面對弗利連的複製體
這個時候你就見識到弗利連真正的威力
弗利連跟他的複製體使出了很多毀天滅地的巨大魔法
有放雷的、有放火的
然後還用了一些忍術
有什麼地爆天心、螺旋手裡劍之類的
然後最後芙莉蓮還放了一個大招
用神之卡召喚出一個歐貝利斯克的巨神兵
然後這個芙莉蓮跟他的複製體打得那個難分難解
然後費倫呢 就從後面偷襲了那個複製體
要把複製體的手打斷了
但是這個時候 我們才見識到芙莉蓮深不可測的能力
那個複製體雖然手被打斷了
但是他就使了一招叫瞪眼壁咚 知道嗎
就是他瞪了一下那個費倫 然後費倫就飛出去撞到牆
結果黏在牆上 然後費倫就暈倒了
他暈倒前還想說 這是什麼樣神奇的力量
跟魔法完全不一樣
因為我知道這不是魔法
這個是六道佩恩的忍術
就是那個萬象天引
但是因為這個複製體使出了萬象天引
所以就露出了破綻
就被芙莉蓮一擊擊倒
這個故事告訴我們什麼呢
這個故事告訴我們合作的重要性
這個鋪陳非常的長
這個故事告訴我們合作的重要性
就算是一個千年的魔法史
也有可能有一些致命的破綻
千年的魔法使跟一個人類合作
他們可以發揮本來沒有辦法發揮的力量
就像現在我們知道GPT-4
他也有非常強大的能力
但是GPT-4如果跟其他的語言模型合作
他們其實可以發揮1加1大於2的力量
那怎麼讓模型彼此合作呢?
有很多不同的方式
一個可能性是
假設你現在手邊就有一堆語言模型
他們可能有不同的能力
使用他們可能有不同的成本
舉例來說你知道
GPT-4使用的價碼
就比GPT-3.5還要高很多
那有這一堆模型
你要怎麼讓它彼此合作呢
也許一個可能性是
再訓練一個模型
這個模型它可以是語言模型
也可以不是語言模型
總之這個模型的工作就是
判斷假設有一個新的任務進來
任務進來這個任務應該要交給誰來處理
比如說他決定說新的任務要交給模型A來處理
就把這個任務送給模型A
由模型A得到答案
那人看到的是模型A給的答案
那你可能會想說GPT-4就已經是可能是最厲害的模型啦
那他跟其他模型合作有什麼意義嗎
那GPT-4跟其他模型合作還是很有幫助的
因為GPT-4他有一個巨大的缺點就是他太貴了
有可能在有比較簡單的問題作為輸入的時候
語言模型可以判斷說
這個分配工作的模型可以判斷說
這個問題太簡單了
殺雞焉用牛刀
不需要GPT-4來回答這個問題
簡單的任務可以交給比較便宜的模型來處理就好了
那事實上今天在這些展示平臺上
你沒有辦法確定幫你服務的是不是同一個模型
有一些語言模型的展示平臺
其實就已經用了這種讓模型合作的技術
當你問不同問題的時候
真正出來為你服務的模型
可能是不同的模型
不過作為一個使用者
你很難知道這件事情就是了
那如果你想要知道說
怎麼用一個模型負責主導
有哪些語言模型真正出來做事
你可以看一篇paper叫做
Frugal GPT
那我過去上課的錄影已經有特別
講過這個技術
可以參考過去上課的錄影
看看怎麼用一個模型來分配工作
你可以讓模型彼此合作
達到比GPT-4更好的效果
而且使用更低廉的成本
那這是合作的其中一種方式
那還有很多其他的合作方式
我們之前也有講到說
讓模型反省
讓模型反省的意思是說
有一個任務的輸入
語言模型得到一個輸出
再給自己看一遍 問自己說
這個輸出是不是對的 也許語言模型
經過反省之後可以得到不同的輸出
那在反省的過程中
只有語言模型自己跟自己自問自答
但是其實你也可以讓語言模型彼此討論
假設你有語言模型A跟語言模型B
可以先由語言模型A給一個答案
語言模型B呢根據A的答案再產生新的答案
然後A呢再根據自己之前的答案和B的答案再產生新的答案
他們可以做出類似討論的過程
那我知道說這個投影片可能會讓你覺得有一點抽象
到底語言模型的討論看起來實際上是什麼樣子
那我這邊呢有一個比較具體的demo
C Chat版上有人問葬送的芙莉蓮應該要怎麼被翻譯成英文
那葬送的芙莉蓮正式的英文翻譯是Beyond Journey's End
那不過這個名字沒有把葬送的這幾個字翻過來
那我們來看一下如果是大型語言模型
他們會怎麼翻葬送的芙莉蓮這幾個字
好那我們把這個問題呢丟給Claude
那跟Claude說現在的任務呢是把葬送的芙莉蓮翻譯成英文然後給他這個
故事的概要
那對Claude來說這當然不是個問題他可以輕易的給你一個翻譯
他說我把葬送的芙莉蓮翻譯成The Buried Laurel
那這是個蠻直白的翻譯直接把葬送翻成Buried
那我們這邊的重點呢是要讓模型彼此之間討論
那所以我們讓這個claude呢
跟這個GPT-3.5討論那這邊之所以不跟GPT-4或Gemini討論是因為
GPT-4跟Gemini可以連網可以搜尋網路如果他們搜尋網路的話
就會知道葬送的芙莉蓮正式的英文翻譯是什麼那就沒意思了
所以這邊讓claude3跟這個
GPT-3.5討論
那一樣給GPT-3.5任務跟漫畫的故事概要
但這邊呢提供給他claude3的答案
跟他說我先提供另一個可能的答案給GPT-3.5參考
接下來問他說你有更好的翻譯嗎?
如果有的話請提供
那這邊特別強調說你不需要完全同意我的看法
這個括號內的文字是重要的
如果沒有加括號內的文字的話
GPT-3.5很容易就回說
啊你的翻譯實在太棒了
然後討論就結束了
沒什麼好討論的
只要特別跟GPT-3.5說
你不需要完全同意我的看法
那GPT-3.5給什麼樣的答案呢?
他提供給了我們另外一個翻譯
這個翻譯是
這個Entombed Fleuriem
他說Entombed這個
傳達了被埋藏被困的意象
那接下來我們把3.5的答案呢丟給Claude
跟Claude說我提供另一個可能的答案
那接下來問他你有更好的翻譯嗎
那Cloud就提供另外一個翻譯
這次他提供的翻譯是
Flurien's Atonement
那我們再把Claude的翻譯呢
提供給GPT-3.5跟他說我提供另外一個可能的答案
問他說有沒有更好的翻譯
好那這個GPT-3.5就說
那我有另外一個翻譯,這個翻譯是Florian's Redemption
那我再把這個3.5的翻譯呢,再提供給Claude
然後問Claude說有沒有更好的翻譯呢
Cloudry就說呢,這個Florian's Redemption是個很好的翻譯
比先前提出的In Time Florian
和The Buried Florian
還有Florian's Atonement比起來呢
他覺得這個Florian's Redemption是個極佳的英譯版本
這個討論就結束了
後來CloudTree跟GPT 3.5都得到一個他們共同覺得最好的翻譯
當然這個翻譯其實不一定是最好的啦
那這個Demo只是想要告訴你說
如果今天兩個語言模型讓他們討論事情的話
看起來像是什麼樣子
那事實上葬送的芙莉蓮這個葬送呢
有很多重的意思
那翻譯成
那可能也這個不太容易翻譯啦
那我覺得語言模型的翻譯也沒有非常的
切中要害
那總之這個demo是想要告訴你說
兩個語言模型討論起來
討論事情可能是什麼樣子
那當然實際上你在讓語言模型做討論的時候
你並不需要有一個人
把兩個語言模型間的對話
搬來搬去
實際上你永遠可以寫一個程式
透過呼叫API的方式
讓兩個語言模型對話
在作業三裡面大家已經學到
如何透過API來呼叫語言模型
所以你完全可以寫個程式
讓語言模型彼此間對話
讓語言模型彼此間討論
實際上你是不需要
把語言模型間的對話搬來搬去的
那我這邊只是為了展示的需要
所以把語言模型的對話搬來搬去
實際上透過API
你是可以直接讓兩個語言模型對話的
讓語言模型彼此討論有什麼好處呢
相較於讓語言模型自己反省
讓語言模型彼此討論
也許更可以激發語言模型的能力
那這邊是引用一個去年5月的文獻
在這篇文獻裡面
對於自我反省和討論這兩種方法
做了分析
那在這個圖上的縱軸
代表說每一次語言模型推翻先前答案的可能性有多高
那橫軸呢 代表互動的次數
那如果你今天讓語言模型反省
反省一次 反省兩次 反省三次 一直到反省五次
那你發現語言模型如果是自我反省
他推翻之前自己答案的可能性比較低
那這也是容易想像的
因為之前的答案就是語言模型自己的答案
可能是一個他蠻認同的答案
所以他今天不管再怎麼反省
他推翻過去的想法的次數都是有限的
但如果讓多個語言模型討論
語言模型可以接受到新的刺激
接受到另外一個語言模型的輸入
也許他有更高的機會
可以推翻他之前錯誤的答案
那讓語言模型合作
非常直覺的
如果有越多的模型合作
結果會越好
這是出自另外一篇論文
縱軸是他們讓語言模型來解這個數學問題
縱軸是這個解數學問題的正確率
左邊這個圖的橫軸是有多少的模型參與了討論
他們發現有越多語言模型參與這個解題的過程
最後得到正確答案的機率就越高
那右邊這個圖的橫軸是討論的次數
討論了幾個回合 那跟直覺也蠻接近的
如果討論的回合越多
越有可能得到越好的結果
不過討論非常多回合可能也沒用
他們最後討論呢
是停在四個回合
因為三個回合跟四個回合得到的答案
已經非常接近了
那講到多個模型
一起討論
這邊就有了新的議題
多個模型討論
那要用什麼樣的方式來討論呢
有一篇paper叫做
Exchange of Thought
這篇論文裡面嘗試了不同模型的討論方式
那你不需要深究這些討論方式
只是想要告訴你說
語言模型的討論是有各種不同的變化的
可以是假設有三個模型
每個人都貢獻一個答案
把所有答案全部整合起來
那所有人都看得到所有人的答案
也可以說假設A是老闆
B跟C是他的部屬
那B都只跟A報告
C也都只跟A報告
B跟C之間彼此互相沒有交流
也可以A把結果交給C C交給B B再交給A
這也是另外一種方式
也可以B跟C彼此討論彼此辯論
A呢就像是一個裁判一樣
負責評斷B跟C誰說的比較好
有各種不同的討論方式
那這些討論方式目前你還不需要真的去記
用什麼討論方式比較好
因為這邊論文告訴你說
嗯 沒有找到最好的方式
目前看起來不同的任務最適合的討論方式是不一樣的
所以要怎麼讓語言模型最有效的討論
還是一個研究中的問題
那要讓語言模型彼此討論
但是怎麼決定討論已經結束
怎麼決定不同語言模型已經達成共識
討論結束可以得到最終的結論了呢
這個時候你就需要引入一個裁判模型
讓A語言模型提供他的建議
B語言模型提供他的建議
最後由裁判模型讀A模型講的話
跟B模型講的話 然後發表評論
那如果裁判模型覺得沒有達成共識
就繼續討論
那對裁判模型來說
你其實就是把A跟B講過的話
貼給裁判模型問他說
你覺得這兩個模型有沒有達成共識
沒有的話就說沒有 有的話就說有
那今天依照大型語言模型的能力
他往往都能夠蠻精確的這個判斷
兩句話 兩個段落 兩個語言模型的輸出
是不是一致的
裁判模型覺得未達成共識 繼續討論
然後模型A就再提供建議
模型B贊同了A的想法
那裁判模型覺得A跟B現在他們的看法是一致了
就宣佈達成共識
然後裁判模型也可以負責根據討論的過程
做出摘要得到最後的答案
那講到這邊你可能會懷疑說
那會不會這個討論一直都停不下來啊
所有的語言模型莫衷一是
沒有辦法達成共識
沒有辦法停下來
那怎麼辦呢
現階段你不需要擔心這個問題
你需要擔心的是這個討論太快結束
沒有辦法討論起來
因為這些語言模型他們現在的訓練
就是溫良恭儉讓
所以當有人質疑他的想法的時候
他其實是非常容易退縮的
所以今天你要讓語言模型討論的時候
你一定要下一個合適的Prompt
這個Prompt是刺激語言模型
逼迫他反對對方的想法
所以在這篇論文裡面
就嘗試了不同程度的反對的Prompt
那他們發現說
如果下非常強的反對的Prompt
叫語言模型為反對而反對
對方不管說什麼我都反對
那這樣也不一定會得到最好的結果
最好的結果是跟他講說
不需要一定同意對方的想法
你可以表示自己的意見
那如果這樣下方法可以讓討論最順利的進行
那另外一篇論文也有非常類似的發現
他們發現說如果你今天呢
叫語言模型根據另外一個人
另外一個模型的建議來回答
那這個討論就會非常快結束
如果你今天希望討論可以持續的久一點
那你要跟語言模型說
另外一個模型的看法就當作參考就好
你在不同的模型間討論的會比較熱烈
會有比較長的討論
那這邊論文也發現說
比較長的討論可以得到比較好的結果
那我們知道說啊
那一個團隊裡面
如果有不同的角色
也許運作的會更好
那這是一個勇者小隊常見的組成啦
需要有一個負責遠程輸出的魔法使
一個負責奶的僧侶
一個負責近距離攻擊的劍士
跟一個負責坦的矮人
這是一個常見的勇者小隊的組成模式
大家有沒有看到最新的這個連載這樣子
我講一下最新的連載的劇情
以下真的有一個爆雷
你不想聽的就真的把耳朵摀起來
好 你的耳朵摀起來
好 耳朵摀好
最近的連載演到哪裡呢
最近的連載
這漫畫的連載啊
所以你如果看動畫的
你還沒看到這一段
這個漫畫的連載演到
有人要去暗殺芙莉蓮的施主
就是賽莉耶
而這其他人就想說
怎麼可能可以成功暗殺賽莉耶
賽莉耶是上古時代的大神
有毀天滅地的大能
怎麼可能暗殺得了賽莉耶
芙莉蓮就說不
還是有可能暗殺得了賽莉耶的
因為這個七步之外魔法快
但七步之內斧頭快
如果是一個人類的殺手
在接近賽莉耶的情況下
還是殺得了他的
他就舉一個例子 他就指著在角落的那個修塔爾克說
只要在七步之內 修塔爾克取費倫的首級如探狼取物
然後費倫就非常的害怕 躲在弗利連的背後
修塔爾克就非常的受傷 故事就演到這邊
那那個刺殺有沒有成功 我也不知道
這個連戰還沒有演到這邊 這連戰最新的劇情
所以我們知道說呢 這個團隊裡面需要有不同的角色
彼此合作才能夠發揮巨大的力量
所以今天在討論的時候
其實也可以引入不同能力的模型
扮演不同的角色
假設你今天的任務是
要讓大型語言模型寫程式
完成一項專案
那完成一項專案裡面
也許你需要一個Quadrant Manager
主導專案進行的
然後你需要一個負責寫程式的
你需要一個負責測試的
那你可以引入不同的語言模型
來扮演不同的角色
那怎麼讓語言模型扮演不同的角色呢?
首先語言模型本身可能就有不同的專長
比如說有一個模型叫做Code Llama
他做一般的任務可能沒有其他大型語言模型厲害
但他的專長就是他是個肥宅工程師
他就是會Coding 他特別擅長Coding
可以扮演這個工程師的角色
或者是另外一個可能是直接用Prompt
直接告訴語言模型說
你是個Project Manager,你是個Programmer,你是個User
也許這些語言模型讀了這些Prompt以後
就可以發揮不同的潛力變成不同的角色
所以如果有多個語言模型可以彼此合作
你就可以把專案交給Project Manager
Project Manager做好規劃以後
交給AI的Programmer
AI的Programmer把程式寫好以後
交給測試的人測試
再把測試結果交給Project Manager
讓project manager決定要怎麼做下一步的規劃
那如果真的可以讓語言模型彼此合作的話
那這個不是不可能的
你可以看一下我這邊引用的論文
那如果可以讓語言模型彼此合作
那每一個人就都可以當一個公司的CEO
每個人都可以帶領一支由語言模型所組成的團隊
你就可以把一個人活成一個團隊
那不只你可以組建團隊
你還可以優化你的團隊
這是出自另外一篇去年10月的論文
這篇論文叫 Dynamic LLM Agent Network
裡面就提供了一個優化團隊的方式
這個優化團隊的方式說穿了也沒什麼
就是打考績
你就跟每個語言模型說
根據剛才的工作內容
你覺得其他人做的怎樣
那每個語言模型
就可以給其他模型一個分數
你再把分數加起來
分數低的 以後就不讓他參與工作
所以你可以看看這篇論文看看
怎麼幫語言模型打考績優化你的團隊
當然這些論文都是學術論文啦
所以他們測試都是測試在一些
相對比較簡單的任務
那至於這個語言模型的團隊
在真正複雜的任務
比如說真的開發一個程式的專案
真的開發一個軟體的專案
能不能成功
那個還是未知數 還是未知的事情
今天如果你想要體驗帶領一個語言模型的團隊的話
確實有一些開源的專案
是可以讓你帶領語言模型團隊的
比如說Meta、GPT、比如說ChatDev
那裡面就是有各式各樣語言模型的員工
你看這邊有這個Product Manager、有Architect、有Project Manager、有Engineer
等等等等 就是有一批語言模型的員工
你可以把指令直接下給他們
他們真的就會試著做某一些事情
那至於做得好不好 就是另外一回事了
我看過有一個Youtuber呢
就嘗試拿ChatDev來寫網站
而且他寫了以後呢
還真的去網路上跟人家接案
那你知道這個ChatDev啊
他是CALL背後都是CALL那個
ChatGPT、CALLGPT3.5或GPT4
所以是要花錢的 不過成本非常的低
他寫一個網頁呢 只要一美金
他跟別人說兩美金
然後呢 他就說如果我今天真的成功接到案子的話
我就再錄一個影片跟大家分享
但我始終沒有等到下一支影片
看來是沒有接到案子
好 所以這些語言模型當然這個合作呢
比較像是未來語言模型可以做的事情
按照這些語言模型的能力
今天也許讓他們組成一個公司
要真的解真實世界的任務
真的解非常複雜的專案
可能還是力有未逮
但這其實給我們的未來
提供了一個想像
也許在未來
當我們打造語言模型的時候
我們不需要打造一個
真正全能的模型
語言模型可以做專業分工
每個團隊打造出來的語言模型
可以組合成一個語言模型的團隊
每一個語言模型
只要專注在自己專業的領域上就好
也許這是語言模型未來一個可能的發展
那語言模型可以組成公司
也許更進一步他們就可以組成社群
語言模型可以組成社群嗎?
你可以看這個去年4月Stanford發表的論文
他們做了一個語言模型的小鎮
裡面所有的村民都是語言模型
那這個我在之前的錄影已經講過了
所以我就把錄影連結放在這邊給大家參考
那這是一個非常有趣的實驗
你一定要看這個錄影
你可以看到說語言模型跟語言模型之間
還會發展出淡淡的戀愛故事這樣子
真的真的對你一定要看這個影片
那看這個影片呢
如果你沒有聽之前這個課程裡面講的
各種神秘的Prompt技巧的話
你聽這個影片可能會覺得有一些困難
但是如果因為我們已經講過
各式各樣強化語言模型能力的技巧了
所以當你看這個影片的時候
你就可以想一下
他其實用的每一個技巧
都是我們到目前為止的課堂上
已經講過的事情
你看這個影片的時候
看這些AI怎麼互動
怎麼在日常怎麼組成一個村落的時候
你不會覺得太離奇
他裡面講的每一件事情
其實都是我們在課堂上
已經講過的事情
