好 那我們來複習一下
剛才整個framework是怎麼樣的
這個 我們有訓練資料
那這些訓練資料是大量的圖片
這些圖片都有標註
是辛普森家庭的哪一個人物
因此 我們可以訓練一個分類器
好 分類器 不管你用什麼方法
你可以得到
分類器對某一張輸入的圖片
它的信心分數
今天分類器在做分類的時候
它覺得它的分類結果應該是非常正確
還是它其實是沒有什麼信心的
有了這個信心分數以後
你就可以根據這個信心分數
來打造你的異常偵測的系統
如果信心分數高於某一個threshold的話
就說它是正常的
低於某一個threshold
就說它是異常的
這個是訓練資料
再來
我們要講關鍵的development set
那我們在之前的錄影裡面
已經有告訴大家
development set的概念
你今天需要development set
你才能夠來調一些hyperparameter
調一些訓練時候的模型的參數
你才不會overfit在你的testing data上
那今天在異常偵測的任務裡面
我們會需要什麼樣的development set
我們會需要有不只是大量的images
這些images還需要被標注說
它是來自於辛普森家族的人物
還是 不是來自於辛普森家族的人物
但這邊要特別強調一下 在訓練的時候
我們所有的資料
都是辛普森家族的人物
我們需要的label是
它是哪一個辛普森家族的人物
但是我們要做development的時候
我們development set要模仿我們的testing set
我們development set要的
並不是一張圖片
它是辛普森家族的哪一個人物
而是我們的development set裡面
應該要有辛普森家族的人物
跟不是辛普森家族的人物
我們不需要知道
如果它是辛普森家族的人物的話
我們不用知道
它是哪一個辛普森家族的人物
但是我們要有辛普森家族的人物
跟不是辛普森家族的人物
那有了這樣的development set以後
我們就可以把我們的異常偵測的這個系統
用在這個development set上
然後計算這個異常偵測系統
在這個development set上面的
performance 有多好
那等一下會講說
這個performance實際上
要怎麼樣來衡量
而你們都有在development set上
衡量一個異常偵測系統
它的結果 它的結果好壞以後
你就可以拿來決定你的
譬如說我們剛才講說
這個系統裡面有一個很顯然的
你需要決定的參數 就是你的threshold
你可以用你的development set
來調整你的threshold
找出一個可以讓系統最後算出來的結果
最好的threshold
好 那你決定了從hyperparameter以後呢
你就有了一個異常偵測系統
你就可以讓它上線
給它一張圖片
它決定它是不是辛普森家族的人物
那這就是整個系統的流程
那接下來呢 我們要講的是
如何計算一個異常偵測系統的
效能好壞
好 那為了舉這個例子呢
我也是跑了一些實際的例子
這邊就是有100張辛普森家族的圖片
跟5張不是辛普森家族的圖片
你也可以想像說
這個就是我們的development set
那辛普森家族的這個100張圖片呢
它們是用藍色來表示
那你發現說它們的分佈通常集中在
高分的 高confidence的區域
那5張的 不是辛普森家族的圖片呢
就在這邊 你算一下這個紅色的點
不是辛普森家族的圖片
就用紅色來表示
正好有5張紅色的圖片
好 那你會發現說
這邊有某一張藍色的圖片
某一個辛普森家族的人物
它的confidence是特別低的
所以它在異常偵測的時候
機器顯然會在這個地方犯一個錯誤
會認為說它不是辛普森家族的圖片
它是一個異常的圖片
那我很納悶為什麼會這樣
這張圖片是一個辛普森家族的老爺爺
那我也不知道為什麼會這樣
那剩下這5張圖片是誰呢
看看你能不能認出這些人物
第一個這個是
看起來像安娜貝爾的初音
這我是隨便分的sample
我也不知道爲什麼sample到這張
然後這一個
我不知道大家認不認得這個角色
這個是庫洛魔法使 這個是小櫻
然後這個也是小櫻
這個是涼宮春日
這個我不知道大家認不認得是誰
這個應該是魔法少女奈葉
她也是會用魔法 跟小櫻一樣
那有人看到這邊可能會說
這個魔法少女 它的confidence
感覺非常的高
不知道是不是因為它看到
這個黃色魔杖
覺得這搞不好是辛普森家族人物的臉這樣子
它這個分數特別高 有0.998%
好像這個方法沒有很強
但我這邊要強調一下
事實上 在這個bar裡面
有75％以上的圖片
它的confidence都是高於0.998%的
你發現多數辛普森家族的人物
它可以得到的confidence都是1這樣子
所以很多人
自己在實作這個方法的時候
他看到說
今天給你classify一個異常的圖片
它都會給你什麼0.99 這樣很高的分數
但你要發現說 那些正常的圖片
往往可以得到更高的分數
比如說1之類的分數
所以 雖然這些異常的圖片
它們也可以得到很大的分數
但是它們如果沒有
因為這個分數是相對的
所以 它們如果沒有
正常的圖片的分數那麼高
你還是可以得到好的
異常偵測的結果
好 那再來就是要講說
我們怎麼來評估一個系統的好壞呢
舉例來說 現在我們有這樣的development set
我們在這個development set上
如何計算一個我們的異常偵測系統
它的performance的好壞呢
那有人就會想到說
我們剛才說異常偵測
其實它是一個二元分類的問題
它是一個binary classification的問題
我們已經講過binary classification
在等一下助教公告作業二裡面
就是要做binary的classification
那這個binary classification裡面
我們都是用正確率
來衡量一個系統的好壞
有給系統一張圖片
如果它的答案是對的 就得1分
如果是錯的 就得0分
這樣子來做
那但是在異常偵測這個問題裡面
正確率並不是一個好的
來評估系統的方式
你會發現說 很有可能一個系統
它有很高的正確率
但它其實是一個很爛的系統
它什麼事都沒有做
為什麼會這樣呢
因為在異常偵測這個問題裡面
往往異常的data和正常的data
它的比例的分布是非常的懸殊的
在這個例子裡面
我們說異常的資料只有5張
正常的image 有100張
在其它的問題裡面
它的分布可能是更懸殊的
舉例來說 在所有的交易裡面
假設你今天是要做詐欺偵測
可能一百筆 一千筆 一萬筆交易裡面
都不見得有一筆是有詐欺的行為
所以今天異常的資料跟正常的資料
它的比例分佈是非常懸殊的
所以會造成說
如果你光拿正確率
來衡量一個系統的好壞
是會得到非常奇怪的結果的
舉例來說 在這個例子裡面
我們可以說
我們有一個異常偵測的系統
它的λ 我們把它設在0.3以下
λ以上 我們說它是正常的
λ以下 我們說它是異常的
這個時候 這個系統的正確率有多少呢
這個時候 你會發現這個系統
它如果不算正確率的話
在全部給它的100+5 105筆data 裡面
它犯了5個錯誤
它的五個錯誤都是把異常的資料判斷成
這些5張異常的資料
判斷成正常的資料
但這個時候如果你計算它的正確率
把100除以105的話
你會發現它的正確率是超過95％以上
雖然這不是一個你要的異常偵測系統
因為這個系統會把所有的東西
通通判斷成是正常的
但是因為異常的資料很少
所以它其實算起來正確率
仍然是很高的
所以今天在做異常偵測的問題的時候
你不會拿正確率
來直接當作你的evaluation的measure
那你會怎麼做呢
首先我們要知道說
在異常偵測的問題裡面 有兩種錯誤
一種錯誤是
異常的資料被判斷成正常的資料
另外一種是
正常的資料被判斷成異常的資料
所以你實際分析一下的話
假設我們現在把λ切在
比如說0.5這個地方
0.5以上 說它是正常的
0.5以下 說它是異常的
這個時候你就可以計算看看
機器在這兩種錯誤上
各分別犯了多少錯誤
就可以計算說
現在對所有異常的資料而言
對所有5筆異常的資料而言
有1筆被偵測出來
有剩下4筆通通沒有被偵測成異常的
而在所有正常的100筆資料裡面
只有1筆
這個老爺爺它被判斷成異常的
剩下99筆通通都是正常的
那這個時候我們會說
這個機器在false alarm這個地方呢
False alarm就是
正常的東西把它判斷成異常的
就是一個危警報 我們叫false alarm
False alarm的話
它有犯了一個false alarm的錯誤
那如果今天是異常 但沒有偵測出來
這個叫missing
它有4個missing的錯誤
那如果我們今天把這個threshold
切在其它的地方
舉例來說 我們把這個threshold
切在比0.8還要稍微再高一點點
這時候你會發現說
在5張異常的圖片裡面
有兩張
第一個小櫻跟這個像安娜貝爾的初音
它們都是被偵測成異常的
但剩下三張呢 會被歸類為正常的
在所有正常的圖片裡面
在100張正常的圖片裡面
這邊總共有6張圖片被歸類為異常的
94張仍然被判斷為正常的
那哪一個系統比較好呢
但事實上你其實很難回答這個問題
有人可能會很直覺的說
這邊是一個false alarm 四個missing
這邊是六個false alarm 三個missing
這邊加起來有五個錯誤
這邊加起來有九個錯誤
所以顯然左邊的系統好 右邊的系統差
但是 其實一個系統到底是好還是壞
取決於你覺得false alarm 比較嚴重
還是missing比較嚴重
所以你在做異常偵測的時候
你可能會有一個這樣子的cost table
告訴我們說 每一種錯誤有多大的cost
舉例來說 今天把錯的東西
沒偵測到missing 就扣1分
但是如果今天是false alarm
把正常的東西偵測 誤判成異常的
那就要扣100分
如果你是用這樣子的cost來計算
來衡量你的系統的話
那左邊的系統會被扣多少分呢
它被扣了104分
而右邊的系統被扣了603分
所以這個時候按照左邊這個table
你會說左邊這個系統是比較好的
但是如果你的cost table
是像右邊這個樣子
你說 如果我們有1個missing
異常的東西有一個沒有被偵測出來
就扣100分
如果我們把正常的東西
不小心判斷成異常的 就只扣1分的話
那你計算出來的結果就會很不一樣
那在不同的情境下 不同的任務
其實你會有不同的cost table
舉例來說 假設
因為這個辛普森家庭的任務
是一個比較奇怪的任務
不知道誰會需要一個來偵測說
看那個圖片是不是辛普森家族的人物
那假設是舉別的例子
舉例來說 你今天想要做的是癌症檢測
那你可能就會比較傾向於
想要用右邊的cost table
為什麼
因為假設今天一個人 他其實沒有癌症
但是也不小心判斷說他有癌症
那可能他去別家醫院再檢查一次
又檢查出來了
所以他頂多就是幾個禮拜
心情不好而已
雖然很不好 但是其實也還可以接受
但如果其實他有癌症
但是他是異常的狀況
他身體有問題
但是你卻沒有檢查出來的話
那這個很嚴重
這個時候就應該要比較高的cost
那今天cost不同的錯誤 cost要給多少
其實就要問你自己
問你說現在這是什麼樣的任務
要根據不同的任務
也會有不同的cost table
所以如果根據右邊這個cost table
你就會說左邊的系統cost是401分
右邊的系統cost是306分
所以這個時候 右邊的系統就會比較好
所以今天anomaly detection的系統要怎麼衡量
取決於你今天要拿這個系統來做些什麼事
那在文獻上其實還有很多很多衡量
這種異常偵測系統的measure
那我們今天就不細講這些measure
舉例來說 一個常用的measure叫做AUC
叫做area under roc curve
那如果你用這種衡量的方式
你就不需要決定threshold
有一些衡量系統好壞的方式
是不需要決定threshold的
它是看你把testing data裡面
所有的結果 根據分數做一個排序
由高分排到低分
由最可能是異常的
排到最不可能是異常的
排一個排序 它直接根據這個排序
來決定說 這個結果到底是好還是不好
總之有很多種evaluation 的方式
那這邊就放一個AUC
給大家自己survey
如果你想要研究這個問題的話
那總之就是要告訴大家說
異常偵測沒有辦法
用一般的方法來評估一個系統的好壞
